function filterstruct = mweightingfilter(typeswitch, samplingfreq, infoflag);%function filterstruct = mweightingfilter(typeswitch, samplingfreq, infoflag);%% 1. Description:%       Designs a A- or C-weighted filter and saves the output in a special %       structure, which can be convolved with a signal using 'mwavefilter'.%       Use 'mfilterplot' to plot the pictures%--------------------------------------------------------% Interface to Christophe Couvreur's "octave" toolbox% http://thor.fpms.ac.be/~couvreur/octave.html% Uses these programs from there:%   adsgn%   cdsgn%--------------------------------------------------------% %% Inputs:%    typeswitch   = 'A' or 'C'%    samplingfreq = sampling frequency of waves to be convolved with this (Hz)%    infoflag     = 0, 1, or 2 (plot pictures)%% Output%    A 'filterstructure' made by mfiltercreate%% Examples:% >> f = mweightingfilter('A', 32000, 2);  % >> f = mweightingfilter('C', 32000, 2);  %%----------------------------------------------------------------% Original version % MAA Summer 2002 (1 July 2002)%% Updates:% MAA Summer 2002 (September 20th 2002)% General tidying up;% Redone using 'mfiltercreate' and 'mfilterplot'%----------------------------------------------------------------% ******************************************************************% This MATLAB software was developed by Michael A Akeroyd for % supporting research at the University of Connecticut,% the University of Sussex and the MRC Institute% of Hearing Research. It is made available% in the hope that it may prove useful. % % Any for-profit use or redistribution is prohibited. No warranty% is expressed or implied. All rights reserved.% %    Contact address:%      Dr Michael A Akeroyd,%      MRC Institute of Hearing Research%      Glasgow Royal Infirmary %      (Queen Elizabeth Building)%      16 Alexandra Parade%      Glasgow G31 2ER%      United Kingdom%%      maa@ihr.gla.ac.uk%      http://www.ihr.gla.ac.uk% ******************************************************************if nargin == 0   return;endnyquistfreq = samplingfreq/2;filterstruct.type = '';filterstruct.band = 'bandpass';filterstruct.samplefreq = samplingfreq;filterstruct.order = 0;% make filterwarning off;switch typeswitchcase 'A'    if infoflag >= 1;        fprintf('making A-weighting filter ... \n');    end;    typestring = 'A-weighting filter';    [numer, denom] = adsgn(samplingfreq);case 'C'    if infoflag >= 1;        fprintf('making C-weighting filter ... \n');    end;    typestring = 'C-weighting filter';    [numer, denom] = cdsgn(samplingfreq);otherwise    fprintf('unknown filtertype ''%s'' \n', typeswitch);    return;end;warning on;% create filter structure% this also measures the freq and impulse responses, etcnpoints = 512;if infoflag >= 1;   fprintf('storing in ''filterstructure'' using %d-point analyses ... \n', npoints);end;filterstruct = mfiltercreate(typestring, '', samplingfreq, [], [], [], numer, denom, npoints, infoflag);% draw pictures: all plots in default position and default axesif infoflag >=2   figurenumber = 1;   mfilterplot(filterstruct, 'all', -1, -1, 1, -1, infoflag);end;% return value is filterstructif infoflag >=1   fprintf('\n');end;% the end!%--------------------------